{"ast":null,"code":"import _classCallCheck from \"/Users/abhyudaydas/udacity_react/mybookapp/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abhyudaydas/udacity_react/mybookapp/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/abhyudaydas/udacity_react/mybookapp/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/abhyudaydas/udacity_react/mybookapp/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/abhyudaydas/udacity_react/mybookapp/reactnd-project-myreads-starter/src/App.js\";\nimport React from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport Bookshelf from './Bookshelf';\nimport * as BooksAPI from './BooksAPI';\n\nvar BooksApp = /*#__PURE__*/function (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  var _super = _createSuper(BooksApp);\n\n  function BooksApp() {\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      books: [],\n\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false\n    };\n\n    _this.componentDidMount = function () {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState({\n          books: books\n        });\n      });\n    };\n\n    _this.update_shelf = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function () {\n        return _this.setState(function (prevstate) {\n          return {\n            books: prevstate.books.filter(function (b) {\n              if (b.id === book.id) {\n                return book.shelf = shelf;\n              } else {\n                return book;\n              }\n            })\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var books = this.state;\n      BooksAPI.getAll().then(function (books) {\n        console.log(books.books);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, this.state.showSearchPage ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \"Close\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"MyReads\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Bookshelf, {\n        title: \"Currently Reading\",\n        books: books.books.filter(function (book) {\n          return book.shelf === 'currentlyReading';\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Bookshelf, {\n        title: \"Want to Read\",\n        books: books.books.filter(function (book) {\n          return book.shelf === 'wantToRead';\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Bookshelf, {\n        title: \"Read\",\n        books: books.books.filter(function (book) {\n          return book.shelf === 'read';\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"open-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/abhyudaydas/udacity_react/mybookapp/reactnd-project-myreads-starter/src/App.js"],"names":["React","Route","Bookshelf","BooksAPI","BooksApp","state","books","showSearchPage","componentDidMount","getAll","then","setState","update_shelf","book","shelf","update","prevstate","filter","b","id","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport Bookshelf from './Bookshelf'\nimport * as BooksAPI from './BooksAPI'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n  }\n\n  componentDidMount = () => {\n    BooksAPI.getAll().then(books => {\n      this.setState({ books: books });\n    });\n  };\n  \n  update_shelf=(book,shelf)=>{\n    BooksAPI.update(book,shelf).then(\n      ()=>(this.setState((prevstate)=>({\n      books: prevstate.books.filter(b =>{\n      if (b.id===book.id){\n        return(book.shelf=shelf);\n      }\n      else{\n        return (book);\n      }})\n      })) \n   ));\n  }\n    \n  render() {\n    const books = this.state\n    BooksAPI.getAll().then(books=>{console.log(books.books)});\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <Bookshelf title='Currently Reading' books={books.books.filter((book)=>(\n                  book.shelf==='currentlyReading'))}/>\n                <Bookshelf title='Want to Read' books={books.books.filter((book)=>(\n                  book.shelf==='wantToRead'))}/>\n                <Bookshelf title='Read' books={books.books.filter((book)=>(\n                  book.shelf==='read'))}/>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}